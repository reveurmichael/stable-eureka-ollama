def compute_reward(self, pos, action, state):
    hull_angle = state[0]
    x_velocity = state[2]
    
    # Reward for moving forward (higher velocity)
    movement_reward = np.exp(temperature * x_velocity) if temperature != 0 else 1.0
    
    # Penalty for falling down
    fall_penalty = -np.exp(temperature * abs(pos[0])) if temperature != 0 else -abs(pos[0])
    
    # Reward for reaching the end of the terrain (higher hull angle)
    reach_reward = np.exp(temperature * hull_angle) if temperature != 0 else 1.0
    
    # Penalty for getting stuck in a certain position
    stuck_penalty = -np.exp(temperature * abs(hull_angle)) if temperature != 0 else -abs(hull_angle)
    
    # Total reward is the sum of these individual rewards minus the total penalty
    total_reward = movement_reward + reach_reward - fall_penalty - stuck_penalty
    
    return total_reward, {'movement': movement_reward, 'reach': reach_reward, 'fall': fall_penalty, 'stuck': stuck_penalty}