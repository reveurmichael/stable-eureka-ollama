```python
def compute_reward(self, pos, action, state):
    hull_angle_diff = (state[0] - self.prev_hull_angle) ** 2
    velocity = np.linalg.norm([state[2], state[3]])
    position = pos[0]
    reward_components = {}
    
    # Reward for moving forward
    if position > (TERRAIN_LENGTH - TERRAIN_GRASS) * TERRAIN_STEP:
        reward_components['reached_goal'] = np.exp(1)
    
    # Penalty for falling down
    if pos[0] < 0:
        reward_components['fell_down'] = -np.exp(2)
    
    # Penalty for being stuck
    if velocity < 0.1:
        reward_components['stuck'] = -np.exp(1)
    
    # Bonus for maintaining a good hull angle
    if hull_angle_diff < 0.01:
        reward_components['stable_hull'] = np.exp(1)
    
    self.prev_hull_angle = state[0]
    
    total_reward = sum([value for value in reward_components.values()])
    
    return -total_reward, reward_components
```