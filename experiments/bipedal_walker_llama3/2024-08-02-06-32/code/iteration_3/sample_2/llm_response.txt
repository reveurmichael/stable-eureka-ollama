```python
def compute_reward(self, pos, action, state):
    reward = -1.0
    individual_rewards = {}
    
    # Reward for moving forward
    distance_traveled = (pos[0] + VIEWPORT_W / SCALE) * TERRAIN_STEP
    reward += 0.1 * np.exp(2 * distance_traveled)
    individual_rewards['distance_reward'] = np.exp(2 * distance_traveled)
    
    # Reward for not falling down or getting stuck
    if pos[0] < (TERRAIN_LENGTH - TERRAIN_GRASS) * TERRAIN_STEP:
        reward += 1.0
        individual_rewards['reach_end_reward'] = 1.0
    
    # Penalty for taking a step back
    if state[-24:] == [l.fraction for l in self.lidar]:
        reward -= 2.0
        individual_rewards['step_back_penalty'] = -2.0
    
    return reward, individual_rewards