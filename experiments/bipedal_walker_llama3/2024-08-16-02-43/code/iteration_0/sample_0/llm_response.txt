```python
def compute_reward(self, pos, action, state):
    hull_angle = (state[0] + 1.5) % (2 * math.pi)
    x_velocity = state[6]
    
    if pos[0] > TERRAIN_LENGTH - TERRAIN_GRASS:
        return [100.0], {'reached_end': 100.0}
    elif hull_angle > 0.8:
        return [-10.0], {'fell_down': -10.0}
    else:
        if abs(x_velocity) < 1e-3 and pos[1] < 0:
            return [-5.0], {'fell_down': -5.0}
        elif hull_angle > 0.8 or hull_angle < 0.2:
            return [-10.0], {'got_stuck': -10.0}
        else:
            return [1.0], {'moving_forward': 1.0}
```

Explanation: The reward function aims to encourage the agent to reach the end of the terrain, avoid falling down or getting stuck, and maintain a forward momentum. If the agent reaches the end, it receives a high reward (100). If it falls down or gets stuck, it receives a negative reward (-10). For moving forward with a stable hull angle, it receives a positive reward (1).