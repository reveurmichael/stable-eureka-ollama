```python
def compute_reward(self, pos, action, state):
    hull_angle = state[0]
    velocity_x = state[2]
    velocity_y = state[3]

    # Reward for moving forward
    move_forward_reward = np.exp(velocity_x / 10.0)
    
    # Punish for falling down
    fall_punishment = np.exp(-abs(pos[1] - TERRAIN_HEIGHT) / 5.0)
    
    # Encourage stable movement
    stability_reward = np.exp(hull_angle / 0.5)
    
    total_reward = move_forward_reward + stability_reward - fall_punishment
    
    return total_reward, {"move_forward": move_forward_reward, "stability": stability_reward, "fall": -fall_punishment}
```

This reward function aims to encourage the biped to move forward (positive velocity), stay stable (small hull angle), and avoid falling down. The weights for each component are chosen based on the task requirements.