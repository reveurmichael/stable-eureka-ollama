```python
def compute_reward(self, pos, action, state):
    hull_angle = state[0]
    velocity_x = state[2]
    velocity_y = state[3]

    # Reward for moving forward (x-direction)
    forward_reward = np.exp(velocity_x / 5.0)

    # Reward for staying upright (hull angle close to zero)
    stability_reward = np.exp(-np.abs(hull_angle) * 10.0)

    # Penalty for falling down or getting stuck
    termination_penalty = -100.0 if pos[0] < 0 else -50.0

    total_reward = forward_reward + stability_reward + termination_penalty

    individual_reward = {'forward': forward_reward, 'stability': stability_reward, 'termination': termination_penalty}

    return total_reward, individual_reward
```
Explanation: The reward function encourages the biped to move forward (x-direction), stay upright by keeping the hull angle close to zero, and penalizes it for falling down or getting stuck.