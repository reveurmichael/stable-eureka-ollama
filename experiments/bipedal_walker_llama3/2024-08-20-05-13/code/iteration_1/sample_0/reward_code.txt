def compute_reward(self, pos, action, state):
    hull_angle = state[0]
    vel_x = state[2]
    terminal = (pos[0] < 0) or self.game_over

    if terminal:
        reward = -1.0
        individual_reward = {"fall": -1.0}
    else:
        # Encourage forward movement with a moderate temperature
        movement_reward = np.exp((pos[0] + VIEWPORT_W / SCALE / 5) / TERRAIN_LENGTH)
        
        # Reduce the magnitude of the fall penalty to prevent over-punishing
        fall_penalty = max(-np.exp(hull_angle) * 0.1, 0)
        
        # Adjust the fitness score reward to encourage better performance
        fitness_reward = -np.abs(fitness_score - self.target_fitness_score)
        
        reward = movement_reward + fitness_reward - fall_penalty
        individual_reward = {"movement": movement_reward, "fall": fall_penalty, "fitness": fitness_reward}
    
    return reward, individual_reward