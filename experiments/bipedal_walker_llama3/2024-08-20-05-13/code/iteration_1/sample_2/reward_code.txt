def compute_reward(self, pos, action, state):
    hull_angle = state[0]
    vel_x = state[2]
    terminal = (pos[0] < 0) or self.game_over
    
    if terminal:
        reward = -1.0
        individual_reward = {"fitness_score": -100.0}  # Penalize failure to encourage fitness score improvement
    else:
        # Encourage forward movement and minimize fall
        movement_reward = np.exp((pos[0] + VIEWPORT_W / SCALE / 5) / TERRAIN_LENGTH)
        fall_penalty = max(-np.exp(hull_angle), 0)
        reward = movement_reward - 2 * fall_penalty  # Increase penalty for falling to encourage stability
        
        individual_reward = {"movement": movement_reward, "fall": fall_penalty}
        
    return reward, individual_reward