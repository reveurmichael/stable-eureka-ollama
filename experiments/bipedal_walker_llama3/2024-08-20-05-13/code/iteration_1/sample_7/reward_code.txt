def compute_reward(self, pos, action, state):
    hull_angle = state[0]
    vel_x = state[2]
    terminal = (pos[0] < 0) or self.game_over
    
    if terminal:
        reward = -1.0
        individual_reward = {"fall": -0.5}
    else:
        # Encourage forward movement
        movement_reward = np.exp((pos[0] + VIEWPORT_W / SCALE / 5) / TERRAIN_LENGTH)
        # Gradual fall penalty
        fall_penalty = (hull_angle > 1.5) * (np.exp(-hull_angle) - 1)
        # Scaled fitness score reward
        fitness_reward = np.clip(self.fitness_score, -10, 0) / 10.0
        reward = movement_reward + fitness_reward - fall_penalty
        individual_reward = {"movement": movement_reward, "fall": fall_penalty, "fitness": fitness_reward}
    
    return reward, individual_reward