def compute_reward(self, pos, action, state):
    distance_to_goal = abs(pos[0] - TERRAIN_LENGTH)
    moving_forward = not self.game_over and (pos[0] < 0 or pos[0] > TERRAIN_GRASS * TERRAIN_STEP)

    # Scaled-down penalty component
    penalty = -0.001 * (state[6] + state[13])

    # New progress component to encourage moving towards the goal
    progress = np.exp(-(distance_to_goal ** 2) / 1000)

    # Modified moving_forward component with more differentiation
    moving_forward_reward = 1 if moving_forward else -0.5

    reward = progress + moving_forward_reward + penalty

    individual_reward = {
        "progress": progress,
        "moving_forward": moving_forward_reward,
        "penalty": penalty
    }

    return reward, individual_reward