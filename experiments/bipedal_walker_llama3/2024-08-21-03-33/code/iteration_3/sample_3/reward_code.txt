def compute_reward(self, pos, action, state):
    distance_to_goal = abs(pos[0] - TERRAIN_LENGTH)
    moving_forward = not self.game_over and (pos[0] < 0 or pos[0] > TERRAIN_GRASS * TERRAIN_STEP)

    penalty_scale = 1.5  # Adjust the penalty scale as needed
    penalty = np.exp(-(state[6] + state[13]) / penalty_scale) - 0.01

    fitness_reward = np.exp(1.5 * (fitness_score - min(fitness_score))) - 0.001  # Reverse the penalty and scale it
    moving_forward_reward = np.exp(-(distance_to_goal ** 2) / 1000) * (1 if moving_forward else 0.5)

    reward = fitness_reward + moving_forward_reward - penalty

    individual_reward = {"progress": np.exp(-(distance_to_goal ** 2) / 1000), "moving_forward": 1 if moving_forward else 0, "penalty": penalty}
    
    return reward, individual_reward