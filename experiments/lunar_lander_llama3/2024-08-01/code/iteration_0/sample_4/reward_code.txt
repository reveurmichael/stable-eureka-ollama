def compute_reward(state, m_power, s_power, terminated):
    # Define the reward structure
    reward = 0.0

    # Reward for reaching the helipad ( termination state )
    if terminated:
        if abs(state[0]) >= 1.0:  # Land successfully on the helipad
            reward += 10.0
        else:  # Fail to land
            reward -= 5.0

    # Reward for orientation and side engines
    if m_power > 0:
        reward += 2.0 * m_power  # Main engine power
    if s_power > 0:
        reward += 1.0 * s_power  # Side engine power

    # Penalty for not reaching the helipad ( termination state )
    if not terminated and abs(state[0]) < 1.0:  # Still in flight
        reward -= 0.5  # Gradually decrease reward as agent doesn't land

    return reward, individual_reward