A reinforcement learning problem!

The reward function is:

```
def compute_reward(self, state, m_power, s_power, terminated):
    # Compute the reward based on the current state
    reward = -100.0 * (abs(state[0]) + abs(state[1]))  # penalty for being far from target
    if not terminated:
        if self.lander.position[2] >= 1.0:  # landing successfully
            reward += 100.0
        elif self.lander.angle > 10.0 or self.lander.angularVelocity > 5.0:  # crash
            reward -= 50.0
    return reward, {'m_power': m_power, 's_power': s_power}
```

This reward function encourages the agent to land safely and penalizes it for being far from the target (i.e., the helipad).