def compute_reward(self, state, m_power, s_power, terminated):
    reward = 0.0

    # Penalty for deviating too far from the helipad
    if abs(state[0]) >= 1.0:
        reward -= 10.0

    # Reward for maintaining a reasonable velocity and angle
    reward += state[3] * 0.5 + state[4] * 0.2

    # Bonus for using main engine effectively (but not too aggressively)
    if m_power > 0.5:
        reward += 2.0 * m_power - 1.0

    # Penalty for using side engines excessively
    if s_power > 0.7:
        reward -= 3.0 * s_power - 2.0

    # Termination penalty (if episode is terminated)
    if terminated:
        reward -= 10.0

    individual_reward = {'main_engine': m_power, 'side_engine': s_power}

    return reward, individual_reward