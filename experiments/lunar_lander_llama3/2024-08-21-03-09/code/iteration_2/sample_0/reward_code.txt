def compute_reward(state, m_power, s_power, terminated):
    if terminated:
        return -100  # or some other penalty value

    main_engine_reward = m_power * 10  # adjust this value to balance main engine thrust vs side engines
    orientation_reward = s_power * 5  # adjust this value to balance orientation/side engines vs main engine thrust

    reward = main_engine_reward + orientation_reward

    individual_reward = {'main_engine': main_engine_reward, 'orientation': orientation_reward}

    return reward, individual_reward