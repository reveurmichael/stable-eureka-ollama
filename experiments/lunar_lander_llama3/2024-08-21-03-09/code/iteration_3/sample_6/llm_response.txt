The reward code is:

```
def compute_reward(self, state, m_power, s_power, terminated):
    if terminated:
        # Game over or out of bounds
        return -1.0, {}
    elif self.lander.position[1] < (self.helipad_y + LEG_DOWN / SCALE):
        # Landed successfully
        return 10.0, {'landing': True}
    else:
        # Ongoing flight
        return -0.05, {'flight': True}
```

This reward function is designed for the Lunar Lander game, where the goal is to land a spacecraft safely on the lunar surface while minimizing fuel consumption. The reward is given based on two conditions: 

1. If the spacecraft has landed successfully (i.e., its vertical position is below the landing pad), it receives a high reward of 10.
2. If the spacecraft has not landed yet, but its vertical position is increasing (i.e., it's still in flight), it receives a small negative reward of -0.05 to encourage fuel efficiency and safe descent.

The `individual_reward` dictionary keeps track of additional information about the episode, such as whether the spacecraft landed successfully or if it's still in flight.