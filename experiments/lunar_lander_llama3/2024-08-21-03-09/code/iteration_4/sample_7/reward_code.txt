def compute_reward(state, m_power, s_power, terminated):
    # Define constants
    REWARD_MAIN_ENGINE = 1.0
    REWARD_SIDE_ENGINE = -0.5
    REWARD_TERMINATION = -10.0

    # Calculate the main engine reward
    main_engine_reward = REWARD_MAIN_ENGINE * m_power

    # Calculate the side engine reward (only applicable if side engines are used)
    if s_power > 0:
        side_engine_reward = REWARD_SIDE_ENGINE * s_power
    else:
        side_engine_reward = 0.0

    # Termination penalty (if the episode has terminated)
    if terminated:
        reward = -REWARD_TERMINATION
    else:
        reward = main_engine_reward + side_engine_reward

    individual_reward = {'main_engine': main_engine_reward, 'side_engine': side_engine_reward}

    return reward, individual_reward