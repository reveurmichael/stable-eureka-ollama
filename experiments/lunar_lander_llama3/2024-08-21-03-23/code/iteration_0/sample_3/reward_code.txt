def compute_reward(self, state, m_power, s_power, terminated):
    # Good landing and survival (100 points)
    if not terminated and state[0] < 1.0:  # within the viewport
        reward = 100.0
    
    # Penalty for crashing or going out of bounds (0 points)
    elif terminated:
        reward = -100.0
    
    # Reward for proper orientation (10 points per degree)
    elif abs(state[4]) < 5.0:  # within 5 degrees from horizontal
        reward = 10.0 * (1.0 - abs(state[4]) / 5.0)
    
    # Penalty for excessive rotation (5 points per degree)
    elif state[5] > 2.0:  # more than 2 degrees of rotation
        reward = -5.0 * state[5]
    
    # Reward for using main engines (10 points per unit of m_power)
    if m_power > 0:
        reward += 10.0 * m_power
    
    # Penalty for using side engines (5 points per unit of s_power)
    elif s_power > 0:
        reward -= 5.0 * s_power
    
    return reward, individual_reward