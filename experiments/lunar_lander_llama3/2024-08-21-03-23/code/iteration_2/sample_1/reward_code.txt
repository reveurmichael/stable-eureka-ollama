def compute_reward(state, m_power, s_power, terminated):
    # Calculate a base reward based on the distance from the helipad and the lander's velocity
    base_reward = -0.1 * (state[0] ** 2 + state[1] ** 2) - 0.01 * (state[3] ** 2 + state[4] ** 2)

    # If the game is over or the lander has fallen off the screen, set a large negative reward
    if terminated:
        return -100, {"game_over": -100}

    # If the side engines are being used (i.e., s_power > 0), add a positive reward bonus
    if s_power > 0:
        base_reward += 0.1 * s_power

    # If the main engines are being used (i.e., m_power > 0), add another positive reward bonus
    if m_power > 0:
        base_reward += 0.05 * m_power

    return base_reward, {"main": m_power, "side": s_power}