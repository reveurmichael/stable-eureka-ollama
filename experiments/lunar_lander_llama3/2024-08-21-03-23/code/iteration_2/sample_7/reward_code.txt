def compute_reward(state, m_power, s_power, terminated):
    if terminated:  # Game over or out of bounds?
        return -1.0, {}  # Negative reward for termination

    # Compute rewards for main engine (m_power) and side engines (s_power)
    m_engine_reward = np.clip(m_power / MAIN_ENGINE_POWER, 0.0, 1.0)
    s_engine_reward = np.clip(s_power, 0.5, 1.0)

    # Combine main and side engine rewards
    reward = m_engine_reward + s_engine_reward

    return reward, {'main_engine': m_engine_reward, 'side_engines': s_engine_reward}