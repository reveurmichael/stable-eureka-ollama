def compute_reward(self, state, m_power, s_power, terminated):
    # Calculate the distance from the lander to the helipad
    helipad_distance = np.linalg.norm(state[:2]) - LEG_DOWN / SCALE

    # Reward for being close to the helipad (positive)
    helipad_reward = np.clip(helipad_distance, 0, VIEWPORT_H / SCALE) * 10.0

    # Punish for using too much main engine power (negative)
    main_engine_punishment = -np.abs(m_power) * 5.0

    # Reward for using side engines to adjust orientation (positive)
    side_engine_reward = np.clip(np.abs(s_power), 0, 1.0) * 2.0

    # Termination penalty (negative)
    termination_penalty = -100.0 if terminated else 0.0

    individual_reward = helipad_reward + main_engine_punishment + side_engine_reward + termination_penalty
    return individual_reward, {'helipad_distance': helipad_distance, 'main_engine_punishment': np.abs(m_power), 'side_engine_reward': s_power}