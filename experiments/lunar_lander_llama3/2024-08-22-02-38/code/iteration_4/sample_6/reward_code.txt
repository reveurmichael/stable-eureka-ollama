def compute_reward(state, m_power, s_power, terminated):
    reward = 0.0

    # Success bonus (if landed safely)
    if not terminated:
        reward += +100.0

    # Crash penalty (if crashed or fell off)
    elif terminated and abs(state[0]) >= 1.0:  # crashed or fell off
        reward -= 50.0

    # Penalty for deviating from optimal trajectory
    distance_to_helipad = abs(state[0] - VIEWPORT_W / SCALE / 2) + abs(state[1] - (self.helipad_y + LEG_DOWN / SCALE))
    if not terminated:
        reward -= 0.5 * distance_to_helipad

    # Reward for proximity to the helipad
    if not terminated and distance_to_helipad < 10:  # within a reasonable distance from the helipad
        reward += 1.0 / (distance_to_helipad + 1)

    # Penalty for using too much fuel
    total_power = m_power + s_power
    if not terminated:
        reward -= 0.01 * total_power

    return reward, {'m_power': m_power, 's_power': s_power}