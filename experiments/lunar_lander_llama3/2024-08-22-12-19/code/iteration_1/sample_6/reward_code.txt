def compute_reward(self, state, action, next_state, terminated):
    # ... (rest of the code remains the same)

    # Distance-based reward: incentivize moving towards the landing pad
    distance_reward = -np.sqrt(x**2 + y**2) / 10.0  # adjust scale

    # Total reward: a weighted sum of all components
    reward = (distance_reward
              + 0.3 * height_penalty  # keep this component's weight the same
              + 0.1 * velocity_penalty  # rescale velocity penalty
              + 0.01 * fuel_penalty
              + 50 * landing_reward)  # increase magnitude of landing reward

    if terminated and not (left_leg and right_leg):
        reward -= 100  # apply termination penalty

    individual_reward = {
        "distance_reward": distance_reward,
        "height_penalty": height_penalty,
        "velocity_penalty": velocity_penalty,
        "fuel_penalty": fuel_penalty,
        "landing_reward": landing_reward,
    }

    return reward, individual_reward