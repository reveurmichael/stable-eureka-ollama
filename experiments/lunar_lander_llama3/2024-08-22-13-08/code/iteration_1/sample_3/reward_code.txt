def compute_reward(state, m_power, s_power, terminated):
    proximity_bonus = -abs(state[0])  # closer to helipad is better
    orientation_bonus = -abs(state[4])  # stable orientation is better

    if terminated:  # penalty for game over or crash
        reward = -100.0

    else:
        if state[2] > 10.0:  # high speed penalty
            reward = -5.0
        elif state[3] < -5.0:  # low altitude penalty
            reward = -5.0
        else:
            reward = proximity_bonus + orientation_bonus

    individual_reward = {}
    if reward > 0:
        individual_reward['success'] = True
    else:
        individual_reward['failure'] = True

    return reward, individual_reward