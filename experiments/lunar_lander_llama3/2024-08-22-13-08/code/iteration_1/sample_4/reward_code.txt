def compute_reward(state, m_power, s_power, terminated):
    # Positive rewards for good landing practices
    angle_penalty = -0.1 * np.abs(state[4])  # penalize large angles
    velocity_reward = -0.05 * (state[2] ** 2 + state[3] ** 2)  # encourage low velocities
    distance_reward = 0.5 * (1.0 - np.abs(state[0]))  # reward proximity to target

    # Penalty for crashes or significant impacts
    crash_penalty = -10.0 if terminated else 0.0

    individual_reward = angle_penalty + velocity_reward + distance_reward + crash_penalty

    return individual_reward, {'angle': angle_penalty, 'velocity': velocity_reward, 'distance': distance_reward}